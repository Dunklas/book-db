name: Deploy
env:
  APP_NAME: cryptic-anchorage-09442
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx
      - run: |
          echo $HEROKU_API_KEY | docker login --username=$HEROKU_EMAIL --password-stdin registry.heroku.com
      - uses: docker/build-push-action@v2
        with:
          context: backend
          push: true
          tags: registry.heroku.com/${{ env.APP_NAME }}/web
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  api-test:
    runs-on: ubuntu-latest
    needs: build-backend
    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    steps:
      - run: |
          docker run -e PORT=8000 -e DATABASE_URL="postgres://postgres:password@localhost:5432/postgres" \
            -p 8000:8000 \
            registry.heroku.com/$APP_NAME/web
      - run: curl --fail localhost:8000/books

  release-backend:
    runs-on: ubuntu-latest
    steps:
      - run: heroku container:release -a $APP_NAME web
